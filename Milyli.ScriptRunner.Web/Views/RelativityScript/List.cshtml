@model ScriptListModel
@using Newtonsoft.Json
@{
    ViewBag.Title = string.Format("Relativity Script List - {0}", Model.RelativityWorkspace.Name);
}
@section Styles
{
    @Styles.Render("~/Content/DataTables/styles/css")
}

<h3>Relativity Script List</h3>

<div id="script-list" class="row">
    <div class="workspace-list col-md-2 col-lg-2 col-lg-offset-1 col-sm-1">
        <h4>Current Workspace</h4>
        <div class="typeahead-container">
            <input class="typeahead" type="text" data-provide="typeahead" autocomplete="off" />
        </div>
    </div>
    <div class="col-md-10 col-lg-8 col-sm-11 col-lg-pull-1">
        <table id="script-table">
            <thead>
                <tr>
                    <th>
                        Script Name
                    </th>
                    <th>
                        Schedule Count
                    </th>
					<th>
						Last Execution Time
					</th>
                    <th>
                        Next Execution Time
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/datatables/js");
    <script type="text/javascript">
        var options = {
            extend : {
                "{root}" : function (ScriptListModel)
                {
                    ScriptListModel.SelectedWorkspace = ko.observable();
                },

                "{root}.RelativityWorkspaces[i]" : function (RelativityWorkspace)
                {
                    RelativityWorkspace.Url = function() {return "@Url.Action("List")?relativityWorkspaceId="+RelativityWorkspace.WorkspaceId();};
                },
                "{root}.RelativityScripts[i]" : function(RelativityScript)
                {
                    RelativityScript.ScriptName = ko.computed(function(){
                        return RelativityScript.RelativityScript.Name();
                    });

                    RelativityScript.ScriptDetailsUrl = ko.computed(function(){
                        return "@Url.Action("Script", "RelativityScript", new { relativityWorkspaceId = Model.RelativityWorkspace.WorkspaceId})"+
                            "&relativityScriptId="+RelativityScript.RelativityScriptId();
                    });
                	
                	RelativityScript.LastExecutionTime = ko.computed(function(){
                		if(RelativityScript.JobSchedules && RelativityScript.JobSchedules().length)
                		{
                			var times = RelativityScript.JobSchedules().map(function(schedule){
                				return schedule.LastExecutionTime();
                			});
                			times.sort(function(a,b)
											{
												if (a === null) return 1;
												else if (b === null) return -1;
                				return a > b ? -1 : a < b ? 1 : 0;
                			});
                			return times[0];
                		}
                		return "";
                	});

                    RelativityScript.NextExecutionTime = ko.computed(function(){
                        if(RelativityScript.JobSchedules && RelativityScript.JobSchedules().length)
                        {
                        	var times = RelativityScript.JobSchedules().map(function(schedule){
                        		return schedule.NextExecutionTime();
                        	});
                        	times.sort(function(a,b)
													{
														if (a === null) return 1;
														else if (b === null) return -1;
                        		else return a > b ? 1 : a < b ? -1 : 0;
                        	});
                        	return times[0];
                        }
                        return "";
                    });

                    RelativityScript.JobScheduleCount = ko.computed(function(){
                        if(RelativityScript.JobSchedules && RelativityScript.JobSchedules().length)
                        {
                            return RelativityScript.JobSchedules().length
                        }
                        return 0;
                    });

                    RelativityScript.NewSchedule = function()
                    {
                        var baseUrl = "@Url.Action("NewSchedule", "JobSchedule", new { workspaceId = Model.RelativityWorkspace.WorkspaceId })";
                        var id = RelativityScript.RelativityScriptId();
                        window.location.href=baseUrl + "&relativityScriptId="+id;
                    };
                }
            }
        };


        var viewmodel = ko.viewmodel.fromModel(@Html.Raw(JsonConvert.SerializeObject(Model)), options);
        var typeaheadSource = new Bloodhound({
            local: viewmodel.RelativityWorkspaces(),
            identify : function(workspace) { return workspace.WorkspaceId() },
            datumTokenizer : function(workspace){
                return Bloodhound.tokenizers.whitespace(workspace.Name())
            },
            queryTokenizer : Bloodhound.tokenizers.whitespace            
        });

        $('.typeahead').attr("placeholder", viewmodel.RelativityWorkspace.Name());

        var typeahead = $('.typeahead').typeahead({
            hint: true,
            hightlight: true,
            minLength: 1
        },
        {
            name : 'RelativityWorkspaces',
            displayKey : function(workspace){
                return workspace.Name();
            },
            source : typeaheadSource
        });
        
        typeahead.on('typeahead:select typeahead:autocomplete', function(event, workspace)
        {
            if(workspace.WorkspaceId() != viewmodel.RelativityWorkspace.WorkspaceId())
            {
                window.location.href = workspace.Url();
            }
        });

        ko.applyBindings(viewmodel, $("#script-list")[0]);
        (function()
        {
            var $datatable = {};
            var currentRow = null;
            var getCell = function($dt, row,col)
            {
                if(currentRow === null || (currentRow.row !== row))
                {
                    currentRow =
                        {
                            row : row,
                            node : $dt.row(row).node()
                        };
                }
                return currentRow.node && currentRow.node.childNodes && currentRow.node.childNodes.length > col ? currentRow.node.childNodes[col] : undefined;
            };

            var addElementToCell = function($element, meta)
            {
                $(getCell($datatable, meta.row, meta.col)).append($element);
            };

            var overwriteElementToCell = function ($element, meta)
            {
                var $cell = $(getCell($datatable, meta.row, meta.col));
                $cell.empty();
                $cell.append($element);
            };

            $("#script-table").DataTable({
                autoWidth : false,
                columns : [{
                    data : "ScriptName",
                    render : function(scriptName, type, data, meta)
                    {
                        var $link = $("<a></a>");
                        $link.attr("href", data.ScriptDetailsUrl());
                        $link.text(scriptName());
                        overwriteElementToCell($link, meta);
                        return scriptName;
                    }
                },
                {
                    data : "JobScheduleCount"
                },
				{
				    data: "LastExecutionTime",
				    render : function(lastExecutionTime)
				    {
				        return toTimeString(lastExecutionTime());
				    }
				},
                {
                    data: "NextExecutionTime",
                    render : function(nextExecutionTime)
                    {
                        return toTimeString(nextExecutionTime());
                    }
                },
                {
                    data : "RelativityScriptId",
                    orderable: false,
                    render: function(id, type, data, meta)
                    {
                        var $link = $("<a href='javascript:;'></a>");
                        $link.addClass("fa fa-plus");
                        $link.on("click", function(event){
                            event.stopImmediatePropagation();
                            data.NewSchedule();
                        });
                        overwriteElementToCell($link, meta);
                        return "";
                    }
                }],
                dom : "ftrlip",
                lengthMenu : [ 25, 50, 100, 200 ]
            });
            $datatable = $("#script-table").DataTable();
            $datatable.rows.add(viewmodel.RelativityScripts());
            $datatable.rows().invalidate();
            $datatable.rows().draw();
        })();
    </script>
}